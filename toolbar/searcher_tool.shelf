<?xml version="1.0" encoding="UTF-8"?>
<shelfDocument>
  <!-- This file contains definitions of shelves, toolbars, and tools.
 It should not be hand-edited when it is being used by the application.
 Note, that two definitions of the same element are not allowed in
 a single file. -->

  <toolshelf name="searcher_shelf" label="Searcher Shelf">
    <memberTool name="searcher::searcher"/>
    <memberTool name="pyblish"/>
  </toolshelf>

  <tool name="searcher::searcher" label="Searcher" icon="hicon:/SVGIcons.index?BUTTONS_search.svg">
    <script scriptType="python"><![CDATA[from __future__ import print_function
from __future__ import absolute_import
from searcher import searcher
import toolutils
import os
reload(searcher) 

import sys

outputpath =  os.path.join(
    hou.homeHoudiniDirectory(), 'Searcher', "err.log"
)

class Logger(object):
    def __init__(self):
        self.terminal = sys.stdout
        self.log = open(outputpath, "a")

    def write(self, message):
        self.terminal.write(message)
        self.log.write(message)  

    def flush(self):
        #this flush method is needed for python 3 compatibility.
        #this handles the flush command by doing nothing.
        #you might want to specify some extra behavior here.
        pass    

sys.stdout = Logger()



try:
    searcher.CreateSearcherPanel(**kwargs)
except(AttributeError, TypeError) as e:
    hou.ui.setStatusMessage(
                ("Check Searcher Error Log: %s" % str(e)),
                severity=hou.severityType.Warning
            )]]></script>
  </tool>
</shelfDocument>
